//-------------- FIBONACCI TEST --------------
def fibonacci(x : int, y : int, z : int) : int
{
	if(z <= 0)
	{
		write "Invalid start count";
		return -1;
	}
	else
	{
		if(z == 1)
		{
			return y;
		}
		else
		{
			return fibonacci(y, y+x, z-1);
		}
	}
}

//write fibonacci(1, 1, 20);

//-------------- FUNCTION CALLS WITH/WITHOUT PARAMETERS --------------

/*def noParams() : int
{
	var x : int  = 5;
	while(recursiveTest(x))
	{
		set x = x - 1;
		write x;
	}
return 1;
}

def recursiveTest(x : int) : bool
{
	if(x > 0)
	{
		return true;
	}
	else
	{
		return false;
	}
}	

write noParams();


//write "hey";	

def funcPow(x: real, n:int) : real
{
	var y : real = 1.0;
	if(n>0)
	{
		while(n>0)
		{
			set y = y * x;
			set n = n - 1;
		}
	}
	else
	{
		while(n < 0)
		{
			set y = y / x;
			set n = n + 1;
		}
	}
	return y;
}

def tester(x : int) : int
{
	var y : bool = true;
	var y : real = 9.9;

	set x = "hello"; 

	while(x <= "hello")
	{
		write x;
		set x = x + 1;
	}
	return x;
}

write tester(7);*/